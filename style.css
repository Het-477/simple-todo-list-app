*,
*::before,
*::after {
    box-sizing: border-box;
}

* {
    margin: 0;
    padding: 0;
}

:root {
    --my-cool-gradient: linear-gradient(45deg, orange 15%, purple 100%);
    --dark: #001747;
    --grey: #b1bacb;
    --grey-dark: #b1b1b176;
    --grey-border: #b1b1b176;
    --grey-light: #e6e6e6;
    --blue: rgb(53, 53, 231);
    --green: rgb(13, 209, 13);
    --white: white;
}

body {
    height: 100vh;
    background: var(--my-cool-gradient);
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
}

/* The whole To Do list container */
.todo-container {
    background-color: var(--white);
    /* padding: 20px 120px 200px 120px; */
    height: 60%;
    width: 60%;
    max-width: 30rem;
    padding: 3rem;
    border-radius: 1.4rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

/* heading  */
h2 {
    height: 3rem;
    color: var(--dark);
    text-transform: uppercase;
    text-align: center;
}

button {
    cursor: pointer;
}

/* idk how these two work but i will figure it out */
/* TODO : know more about these position: relative && absolute properties */
.add-todo-btn {
    background-color: var(--blue);
    color: var(--white);
    border-radius: 4px;
    border: none;
    font-size: 1.1rem;
    padding: 8px 16px;
    position: absolute;
    right: 0.5rem;
    bottom: 0.8rem;
}

/* Main input container */
.input-container {
    position: relative;
    display: flex;
}

.input-field {
    font-size: 1.1rem;
    width: 100%;
    padding: 1.25rem;
    border: 0.06rem solid #d2d2d2bf;
    border-radius: 0.4rem;
}

/* To change placeholder text color */
input[type="text"]::placeholder {
    color: var(--grey);
}

/* This elements doesn't exist yet, we will cerate it with some js  */
.toDoContainer {
    display: flex;
    gap: 1rem;
}

/* Turning the regular list into a scrollable list  */
ul {
    overflow-y: scroll;
}

li {
    display: flex;
    flex-direction: column;
    gap: 1.2rem;
    padding: 1.3rem;
}

/* 'p' inside the todo list doesn't exist yet, we will create it with js */
#todoList p {
    color: var(--grey);
}

/* this will also be added via js */
.disabled-todo-task {
    display: flex;
    text-decoration: line-through;
}

/* to check and uncheck a todo task. this will be done via js */
input[type="checkbox"] {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    cursor: pointer;
}

input[type="checkbox"]::before {
    content: "\2713";
    display: inline-block;
    width: 2rem;
    height: 2rem;
    font-size: 1.7rem;
    text-align: center;
    border: 0.06rem solid var(--grey-border);
    border-radius: 50%;
    color: transparent;
}

input[type="checkbox"]:checked::before {
    color: var(--white);
    background-color: var(--green);
    border: 0.06rem solid var(--green);
    border-radius: 50%;
}

.counter {
    border: 0.06rem solid var(--grey-light);
}

.counter-container {
    height: 2rem;
    display: flex;
    justify-content: space-between;
    margin: 1.0rem;
    /* padding:rem; */
}

.counter-container button {
    display: flex;
    text-align: center;
    align-items: center;
    background-color: transparent;
    color: var(--grey);
    border-radius: 4px;
    border: none;
    font-size: 1rem;
    padding: 8px 16px;
}

.counter-container p {
    align-self: center;
    color: var(--grey);
}

.footer {
    background: var(--white);
    padding: 1.5rem;
    border-radius: 0.8rem;
}

.footer .footer-container {
    display: flex;
    gap: 1.8rem;
}

.made-by,
.author {
    font-size: 1rem;
}

.made-by {
    color: var(--grey);
}

.author {
    color: var(--blue);
    font-weight: 500;
}

